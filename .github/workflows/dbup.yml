name: DbUp CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  migrate:
    runs-on: ubuntu-latest

    # SQL Server como service container
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: "Y"
          MSSQL_SA_PASSWORD: ${{ secrets.MSSQL_SA_PASSWORD }}
        ports: [ "1433:1433" ]
        # healthcheck con sqlcmd (ODBC 18 requiere TLS; -C confía en el certificado del contenedor)
        options: >-
          --health-cmd="bash -lc '/opt/mssql-tools18/bin/sqlcmd -C -S 127.0.0.1,1433 -U sa -P $MSSQL_SA_PASSWORD -Q \"SELECT 1\" || exit 1'"
          --health-interval=10s --health-timeout=3s --health-retries=60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Instalar sqlcmd (mssql-tools18)
        run: |
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18
          echo '/opt/mssql-tools18/bin' >> $GITHUB_PATH

      - name: Mostrar estructura para verificar rutas
        run: |
          pwd
          ls -la
          echo "---- ./MigradorDbUp"
          ls -la ./MigradorDbUp || true
          echo "---- ./MigradorDbUp/MigradorDbUp"
          ls -la ./MigradorDbUp/MigradorDbUp || true

      - name: Esperar a que SQL Server esté listo
        run: |
          for i in {1..60}; do
            /opt/mssql-tools18/bin/sqlcmd -C -S 127.0.0.1,1433 -U sa -P '${{ secrets.MSSQL_SA_PASSWORD }}' -Q "SELECT 1" && break
            echo "⏳ SQL Server starting... ($i/60)"; sleep 2
          done

      - name: Ejecutar migraciones (DbUp)
        run: |
          # OJO: la ruta es relativa a la raíz del repo
          dotnet restore ./MigradorDbUp/MigradorDbUp.csproj
          dotnet build   -c Release --no-restore ./MigradorDbUp/MigradorDbUp.csproj
          dotnet run     -c Release --project     ./MigradorDbUp/MigradorDbUp.csproj -- --ci 2>&1 | tee migrations.log

      - name: Guardar log de migración
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dbup-log
          path: ${{ github.workspace }}/migrations.log
